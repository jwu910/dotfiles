#!/bin/bash

# Takes one optional argument [JIRA TICKET NUM] in the format XXXX-0000. e.g. LOOP-1234.
# Opens all files changed associated with JIRA ticket. If no argument is provided, JIRA ticket is attempted to be taken from branch name.

### Check environment variable dependencies
if [ -z "$TEXT_EDITOR" ]; then
  echo "=========================================================================================="
  echo "| Please set environment variable TEXT_EDITOR to your favorite non-terminal text editor. |"
  echo "|                                                                                        |"
  echo "| This can be set by adding the following lines to your terminal rc file:                |"
  echo "|     export TEXT_EDITOR=\"subl\"                                                          |"
  echo "=========================================================================================="
  exit 1
fi
### End check environment variable dependencies

FILE_EDITOR=$TEXT_EDITOR
MIN_THRESH=5

filesChanged() {
  git log --grep "$1" --stat --name-only | grep -E ".(tag|jsp.?|vm|ftl|js|(s)?css)$" | sort | uniq
}

openFiles() {
  local cwd=`pwd`
  local repoRoot=$(git rev-parse --show-toplevel 2>/dev/null)

  echo "Opening files."

  cd "$repoRoot"
  filesChanged "$TICKET" | xargs "$FILE_EDITOR"
  cd $cwd
  exit 0
}

filesNotFound() {
  echo "[error] $TICKET was not found in branch log. openCommitsIn take's one optional argument [TICKET-NUMBER] with the expectation"
  echo "[error] that your branch commit message naming convention follows the standard of 'JIRA-TICKET - Commit message'"
  echo "[error] - Is your ticket format '<XXXXX-0000>' e.g.: openCommitsIn LOOP-1234?"
  echo "[error] - Are you on the correct branch?"
  exit 1
}

if [ -z "$1" ]; then
  TICKET=$(git rev-parse --abbrev-ref HEAD | grep -Eo '([A-Z]{3,}-)([0-9]+)' -m 1)

  echo "No ticket entered, using branch name $TICKET."
else
  if [[ $1 =~ ^([A-Z]{3,}-)([0-9]+)$ ]]; then
    TICKET="$1"

    echo "Using $TICKET"
  else
    echo "[$1] Was not a valid JIRA ticket. Please verify that ticket entered had no errors."
    TICKET="[INVALID TICKET]"

    filesNotFound
    return
  fi
fi

FILES=$(filesChanged $TICKET)
FILES_COUNT=$(filesChanged $TICKET | wc -l)

if [ $FILES_COUNT -eq "0" ]; then
  filesNotFound
  return
elif [ $FILES_COUNT -ge $MIN_THRESH ]; then
  while true; do
    echo -e "Open $FILES_COUNT files? (Y/n)"
    read yn
    case $yn in
      [Yy]* )
        openFiles; break;;
      [Nn]* )
        exit 0; break;;
      * )
        echo "Invalid response, please enter Y or N.";
    esac
  done
else
  openFiles
  return
fi
